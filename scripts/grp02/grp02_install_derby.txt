# das folgende ist zu tun, wenn man eine Apache Derby Datenbank installieren will (die ja auch als Metadaten-DB für Hive dient)
sudo -s
cd /usr/local
# wir verwenden Version 10.14.2.0, die ist abwärtskompatibel bis Java 1.8
export DERBY_VERSION=10.14.2.0
wget https://archive.apache.org/dist/db/derby/db-derby-${DERBY_VERSION}/db-derby-${DERBY_VERSION}-bin.tar.gz
tar -xzf db-derby-${DERBY_VERSION}-bin.tar.gz
ln -s db-derby-${DERBY_VERSION}-bin derby
chown -R hduser:hadoop db-derby-${DERBY_VERSION}-bin

su - hduser

cat >> ~/.bashrc <<!
export DERBY_HOME=/usr/local/derby
export PATH=\$PATH:\$DERBY_HOME/bin
export CLASSPATH=\$CLASSPATH:\$DERBY_HOME/lib/derby.jar:\$DERBY_HOME/lib/derbytools.jar:\$DERBY_HOME/lib/derbyoptionaltools.jar:\$DERBY_HOME/lib/derbyshared.jar:.
!
source ~/.bashrc

cd $DERBY_HOME/bin
source ./setEmbeddedCP
java org.apache.derby.tools.sysinfo

# wenn hier kein Fehler gezeigt wird, kann man Derby verwenden über CLI
# siehe auch Tutorial unter https://db.apache.org/derby/papers/DerbyTut/ij_intro.html

java org.apache.derby.tools.ij <<!
   -- verwendet diese Datenbank bzw. erstellt sie, sollte sie noch nicht existieren
   connect 'jdbc:derby:bigdata;create=true';

   CREATE TABLE studentsDerby (
       id INT,
       first_name VARCHAR(80),
       last_name VARCHAR(80),
       entry_date DATE,
       course VARCHAR(80)
   );
   DESCRIBE studentsDerby;
   -- und jetzt mal ein Testdatensatz
   INSERT INTO studentsDerby VALUES (-1,'John','Doe','2022-09-30','swd');
   COMMIT;
   SELECT * FROM studentsDerby;
   SHOW tables;
!

sqoop export --connect jdbc:derby://localhost/bigdata \
 --table studentsDerby \
 --export-dir /user/hive/warehouse/fh.db/students --m 1 \
 --driver com.generic.jdbc.Driver --input-fields-terminated-by ','