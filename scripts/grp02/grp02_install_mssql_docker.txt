# das folgende ist zu tun, wenn man einen docker Container mit der gewählten Datenbank installieren möchte
# Anleitung für MsSql siehe https://learn.microsoft.com/de-de/sql/linux/quickstart-install-connect-docker?view=sql-server-ver16&pivots=cs1-bash
# docker imager download von https://hub.docker.com/_/microsoft-mssql-server
sudo -s
snap install docker
docker pull mcr.microsoft.com/mssql/server
export DOCKER_CONTAINERNAME=sqlpreview
export NETWORK=my-docker-network
docker network create --driver=bridge --subnet=10.0.4.0/24 --ip-range=10.0.4.0/24 --gateway=10.0.4.1 $NETWORK
# give it a shorter name
docker tag mcr.microsoft.com/mssql/server:latest mssql:latest
# einmalig ausführen zur Initialisierung
# WICHTIG: Das Passwort muss den entspr. Kriterien entsprechen, andernfalls startet DB nicht
docker run --name $DOCKER_CONTAINERNAME -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=your()StrongPassw0rd" -e "MSSQL_PID=Evaluation" -p 1433:1433  --name sqlpreview --hostname sqlpreview -d mssql:latest
# danach zum Starten
docker run --name $DOCKER_CONTAINERNAME -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=your()StrongPassw0rd" -p 1433:1433 --hostname $DOCKER_CONTAINERNAME -d mssql:latest
#interaktiver login in den laufenden Container
# hier muss man ev. die einzelnen Commandos separat eingeben und nicht über here-Dokument
docker exec -it  ${DOCKER_CONTAINERNAME} /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "your()StrongPassw0rd" <<!
   CREATE DATABASE swd;
   SELECT Name from sys.databases;
   GO
   USE swd;
   GO
   CREATE TABLE studentsMsSql (id INT, first_name VARCHAR(80), last_name VARCHAR(80), entry_date DATE, course VARCHAR(80));
   GO
   INSERT INTO studentsMsSql VALUES (-1, 'Bill', 'Gates', '20221001', 'SWD');
   INSERT INTO studentsMsSql VALUES (-2, 'Mary', 'Micro', '20221001', 'SWD');
   INSERT INTO studentsMsSql VALUES (-3, 'Unknown', 'Student', '20221001', '');
   INSERT INTO studentsMsSql VALUES (-4, 'Other', 'Student', '20221001', 'ITM'); 
   SELECT * FROM studentsMsSql;
   GO
   exit
!

sudo -s
cd /usr/local
export MSSQL_JDBC_VERSION=12.4.2.0
wget https://download.microsoft.com/download/5/6/9/56904641-5f5a-449c-a284-36c36bc45652/enu/sqljdbc_${MSSQL_JDBC_VERSION}_enu.tar.gz
tar -xzvf sqljdbc_${MSSQL_JDBC_VERSION}_enu.tar.gz sqljdbc_12.4/enu/jars/mssql-jdbc-12.4.2.jre11.jar
mv sqljdbc_12.4/enu/jars/mssql-jdbc-12.4.2.jre11.jar sqoop/lib/
chown hduser:hadoop sqoop/lib/mssql-jdbc-12.4.2.jre11.jar

su - hduser
source ~/.bashrc # damit classpath neu eingelesen wird

sqoop list-databases --connect 'jdbc:sqlserver://localhost:1433;databasename=swd' --username 'sa' --password 'your()StrongPassw0rd'
sqoop list-tables --connect 'jdbc:sqlserver://localhost:1433;databasename=swd' --username 'sa' --password 'your()StrongPassw0rd'
#zw. den Aufrufen muss man das Verzeichnis löschen
hdfs dfs -rm -R /tmp/students*
# (siehe Beispiel unter https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_2)
# das "--bindir ./" ist nötig, andernfalls schreibt sqoop Fehler, dass sie Class studensmssql nicht findet, tatsächlich wird im aktuellen Verzeichnis ein studentsmssql.java angelegt

# Wenn Fehler über Java-Security kommt, ist Inhalt von File grp02_java_policy_to_add.txt in Datei /etc/java-11-openjdk/security/java.policy einzutragen:
https://db.apache.org/derby/docs/10.13/security/rsecpolicysample.html

# Bei folgendem Fehler muss man eine aktive "beeline" Session in anderem Fenster beenden, da dies bei unseren Einstellungen nicht parallel funktioniert
# ERROR XSDB6: Another instance of Derby may have already booted the database /usr/local/apache-hive-4.0.0-beta-1-bin/conf/metastore_db.

# Falls Tabelle von einem vorigen Versuch bereits existiert, dann Parameter "--create-hive-table" entfernen
sqoop import --connect 'jdbc:sqlserver://localhost:1433;databasename=swd' --username 'sa' --password 'your()StrongPassw0rd' --table studentsmssql \
  -m 1  --where "course='SWD'" --warehouse-dir /tmp --hive-home /usr/local/hive --hive-import --hive-table students --create-hive-table --hive-overwrite --hive-database default --bindir ./

